# -*- coding: utf-8 -*-
"""Zad2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ua7oxUrOHLY3v7JzbWxtlt_xhTAvWfD2
"""

class Library:
    def __init__(self, city, street, zip_code, open_hours, phone):
        self.city = city
        self.street = street
        self.zip_code = zip_code
        self.open_hours = open_hours
        self.phone = phone

    def __str__(self):
        return f"Library in {self.city}, {self.street}, {self.zip_code}\nOpen hours: {self.open_hours}\nPhone: {self.phone}"


class Employee:
    def __init__(self, first_name, last_name, hire_date, birth_date, city, street, zip_code, phone):
        self.first_name = first_name
        self.last_name = last_name
        self.hire_date = hire_date
        self.birth_date = birth_date
        self.city = city
        self.street = street
        self.zip_code = zip_code
        self.phone = phone

    def __str__(self):
        return f"Employee: {self.first_name} {self.last_name}\nHire date: {self.hire_date}\nBirth date: {self.birth_date}\n" \
               f"Location: {self.city}, {self.street}, {self.zip_code}\nPhone: {self.phone}"


class Book:
    def __init__(self, library, publication_date, author_name, author_surname, number_of_pages):
        self.library = library
        self.publication_date = publication_date
        self.author_name = author_name
        self.author_surname = author_surname
        self.number_of_pages = number_of_pages

    def __str__(self):
        return f"Book: {self.author_name} {self.author_surname}\nPublished: {self.publication_date}\n" \
               f"Pages: {self.number_of_pages}\n{self.library}"


class Order:
    def __init__(self, employee, student, books, order_date):
        self.employee = employee
        self.student = student
        self.books = books
        self.order_date = order_date

    def __str__(self):
        return f"Order by {self.employee.first_name} {self.employee.last_name} for {self.student.first_name} {self.student.last_name}\n" \
               f"Order date: {self.order_date}\nBooks:\n{', '.join([str(book) for book in self.books])}"


# Stworzenie 2 bibliotek
library1 = Library("City1", "Street1", "12345", "9:00 AM - 5:00 PM", "+123456789")
library2 = Library("City2", "Street2", "54321", "10:00 AM - 6:00 PM", "+987654321")

# Stworzenie 5 książek
book1 = Book(library1, "2022-01-01", "Author1", "Surname1", 200)
book2 = Book(library1, "2022-02-01", "Author2", "Surname2", 250)
book3 = Book(library2, "2022-03-01", "Author3", "Surname3", 300)
book4 = Book(library2, "2022-04-01", "Author4", "Surname4", 180)
book5 = Book(library2, "2022-05-01", "Author5", "Surname5", 220)

# Stworzenie 3 pracowników
employee1 = Employee("Emp1", "Last1", "2022-01-01", "1990-01-01", "City1", "Street1", "12345", "+111111111")
employee2 = Employee("Emp2", "Last2", "2022-02-01", "1991-01-01", "City2", "Street2", "54321", "+222222222")
employee3 = Employee("Emp3", "Last3", "2022-03-01", "1992-01-01", "City3", "Street3", "67890", "+333333333")

# Stworzenie 3 studentów
student1 = Employee("Student1", "Last1", "2000-01-01", "1995-01-01", "City4", "Street4", "13579", "+444444444")
student2 = Employee("Student2", "Last2", "2000-02-01", "1996-01-01", "City5", "Street5", "24680", "+555555555")
student3 = Employee("Student3", "Last3", "2000-03-01", "1997-01-01", "City6", "Street6", "98765", "+666666666")

# Stworzenie 2 zamówień
order1 = Order(employee1, student1, [book1, book2, book3], "2022-06-01")
order2 = Order(employee2, student2, [book4, book5], "2022-06-02")

# Wyświetlenie obu zamówień
print(order1)
print("\n--------------------------------\n")
print(order2)